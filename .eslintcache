[{"C:\\dev\\Mindtech\\Portas\\portas\\src\\styles\\GlobalStyles.ts":"1","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Input\\styles.ts":"2","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Dashboard\\index.tsx":"3","C:\\dev\\Mindtech\\Portas\\portas\\src\\routes.tsx":"4","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDashboard\\styles.ts":"5","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\SmallCard\\styles.ts":"6","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\LoginPage\\index.tsx":"7","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\ChooseType\\styles.ts":"8","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\ChooseType\\index.tsx":"9","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Finished\\index.tsx":"10","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Input\\index.tsx":"11","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\LoginPage\\styles.ts":"12","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\About\\styles.ts":"13","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\About\\index.tsx":"14","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Credentials\\styles.ts":"15","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\About\\index.tsx":"16","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\about.validator.ts":"17","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Address\\index.tsx":"18","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Address\\styles.ts":"19","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Address\\index.tsx":"20","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\address.validator.ts":"21","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AboutAdmin\\styles.ts":"22","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AboutAdmin\\index.tsx":"23","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\aboutAdmin.validator.ts":"24","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AddressAdmin\\styles.ts":"25","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Credentials\\index.tsx":"26","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AddressAdmin\\index.tsx":"27","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\About\\index.tsx":"28","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Address\\index.tsx":"29","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Credentials\\index.tsx":"30","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Finished\\styles.ts":"31","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Credentials\\index.tsx":"32","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\ClientUser\\commonUser.validator.ts":"33","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\ClientUser\\address.validator.ts":"34","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageDoors\\index.tsx":"35","C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\index.ts":"36","C:\\dev\\Mindtech\\Portas\\portas\\src\\config\\roles.config.ts":"37","C:\\dev\\Mindtech\\Portas\\portas\\src\\config\\privateRoute.config.ts":"38","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\SmallCard\\index.tsx":"39","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDashboard\\index.tsx":"40","C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\index.ts":"41","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\AssistancesPage\\index.tsx":"42","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\AssistancesPage\\styles.ts":"43","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageCalls\\index.tsx":"44","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageCalls\\styles.ts":"45","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageDoors\\styles.ts":"46","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Dashboard\\styles.ts":"47","C:\\dev\\Mindtech\\Portas\\portas\\src\\index.tsx":"48","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\About\\styles.ts":"49","C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\slices\\signup.slice.ts":"50","C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\reducers\\index.ts":"51","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Address\\styles.ts":"52","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Address\\styles.ts":"53","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\About\\styles.ts":"54","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardAssistance\\index.tsx":"55","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardAssistance\\styles.ts":"56","C:\\dev\\Mindtech\\Portas\\portas\\src\\services\\api.ts":"57","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Credentials\\styles.ts":"58","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\login.validator.ts":"59","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Credentials\\styles.ts":"60","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Modal\\index.tsx":"61","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddTechnician\\styles.ts":"62","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Modal\\styles.ts":"63","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddTechnician\\index.tsx":"64","C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\Masks\\cnpj.mask.ts":"65","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Portal\\index.tsx":"66","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddCall\\styles.ts":"67","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddCall\\index.tsx":"68","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardCalled\\styles.ts":"69","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardCalled\\index.tsx":"70","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageAssignCalleds\\styles.ts":"71","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\CloseCall\\styles.ts":"72","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageAssignCalleds\\index.tsx":"73","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\CameraDoor\\index.tsx":"74","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\CameraDoor\\styles.ts":"75","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Identification\\styles.ts":"76","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Identification\\index.tsx":"77","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Status\\index.tsx":"78","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Status\\styles.ts":"79","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddDoor\\styles.ts":"80","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddDoor\\index.tsx":"81","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ConfirmDoor\\index.tsx":"82","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ConfirmDoor\\styles.ts":"83","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Attendance\\index.tsx":"84","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Attendance\\styles.ts":"85","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardHistory\\styles.ts":"86","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardHistory\\index.tsx":"87","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardParams\\index.tsx":"88","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardParams\\styles.ts":"89","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Params\\styles.ts":"90","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Params\\index.tsx":"91","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Params\\index.tsx":"92","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Conclusion\\styles.ts":"93","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDescriptionRemote\\index.tsx":"94","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Conclusion\\index.tsx":"95","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDescriptionRemote\\styles.ts":"96","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Textarea\\styles.ts":"97","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Textarea\\index.tsx":"98","C:\\dev\\Mindtech\\Portas\\portas\\src\\App.tsx":"99","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Params\\styles.ts":"100","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\CloseCall\\index.tsx":"101","C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\Masks\\cpf.mask.ts":"102"},{"size":1686,"mtime":1608114590430,"results":"103","hashOfConfig":"104"},{"size":908,"mtime":1611846371676,"results":"105","hashOfConfig":"104"},{"size":4380,"mtime":1611839361873,"results":"106","hashOfConfig":"104"},{"size":3666,"mtime":1610250338609,"results":"107","hashOfConfig":"104"},{"size":1346,"mtime":1608118387389,"results":"108","hashOfConfig":"104"},{"size":642,"mtime":1608118933433,"results":"109","hashOfConfig":"104"},{"size":3155,"mtime":1612418327356,"results":"110","hashOfConfig":"104"},{"size":2591,"mtime":1612417388503,"results":"111","hashOfConfig":"104"},{"size":1473,"mtime":1612417281659,"results":"112","hashOfConfig":"104"},{"size":807,"mtime":1610022287016,"results":"113","hashOfConfig":"104"},{"size":857,"mtime":1612416850757,"results":"114","hashOfConfig":"104"},{"size":2426,"mtime":1612352297142,"results":"115","hashOfConfig":"104"},{"size":2337,"mtime":1612418429532,"results":"116","hashOfConfig":"104"},{"size":2731,"mtime":1612418303550,"results":"117","hashOfConfig":"104"},{"size":2260,"mtime":1612417541381,"results":"118","hashOfConfig":"104"},{"size":3154,"mtime":1612418503112,"results":"119","hashOfConfig":"104"},{"size":382,"mtime":1610378732949,"results":"120","hashOfConfig":"104"},{"size":3264,"mtime":1612417571848,"results":"121","hashOfConfig":"104"},{"size":2302,"mtime":1612418469173,"results":"122","hashOfConfig":"104"},{"size":3201,"mtime":1612418539374,"results":"123","hashOfConfig":"104"},{"size":310,"mtime":1609862243580,"results":"124","hashOfConfig":"104"},{"size":2304,"mtime":1612418432908,"results":"125","hashOfConfig":"104"},{"size":2566,"mtime":1612418519261,"results":"126","hashOfConfig":"104"},{"size":240,"mtime":1609866784937,"results":"127","hashOfConfig":"104"},{"size":2302,"mtime":1612418472877,"results":"128","hashOfConfig":"104"},{"size":3273,"mtime":1612418607693,"results":"129","hashOfConfig":"104"},{"size":3015,"mtime":1612418559440,"results":"130","hashOfConfig":"104"},{"size":2194,"mtime":1612418107288,"results":"131","hashOfConfig":"104"},{"size":2874,"mtime":1612418130693,"results":"132","hashOfConfig":"104"},{"size":2673,"mtime":1612418147575,"results":"133","hashOfConfig":"104"},{"size":1410,"mtime":1612448825341,"results":"134","hashOfConfig":"104"},{"size":2563,"mtime":1612417595531,"results":"135","hashOfConfig":"104"},{"size":240,"mtime":1610022670321,"results":"136","hashOfConfig":"104"},{"size":310,"mtime":1610296539095,"results":"137","hashOfConfig":"104"},{"size":2660,"mtime":1612780855521,"results":"138","hashOfConfig":"104"},{"size":704,"mtime":1610250328619,"results":"139","hashOfConfig":"104"},{"size":84,"mtime":1610542051899,"results":"140","hashOfConfig":"104"},{"size":1975,"mtime":1611845549563,"results":"141","hashOfConfig":"104"},{"size":336,"mtime":1608118939490,"results":"142","hashOfConfig":"104"},{"size":539,"mtime":1610250929129,"results":"143","hashOfConfig":"104"},{"size":155,"mtime":1608114590428,"results":"144","hashOfConfig":"104"},{"size":3885,"mtime":1612785211073,"results":"145","hashOfConfig":"104"},{"size":1753,"mtime":1612785197441,"results":"146","hashOfConfig":"104"},{"size":6268,"mtime":1612785040043,"results":"147","hashOfConfig":"104"},{"size":2328,"mtime":1612784736917,"results":"148","hashOfConfig":"104"},{"size":2474,"mtime":1612783426607,"results":"149","hashOfConfig":"104"},{"size":1341,"mtime":1612780493766,"results":"150","hashOfConfig":"104"},{"size":511,"mtime":1608114590422,"results":"151","hashOfConfig":"104"},{"size":2304,"mtime":1612418057447,"results":"152","hashOfConfig":"104"},{"size":534,"mtime":1610551736697,"results":"153","hashOfConfig":"104"},{"size":159,"mtime":1608114590428,"results":"154","hashOfConfig":"104"},{"size":2102,"mtime":1612415121749,"results":"155","hashOfConfig":"104"},{"size":2302,"mtime":1612417537040,"results":"156","hashOfConfig":"104"},{"size":2304,"mtime":1612417992047,"results":"157","hashOfConfig":"104"},{"size":734,"mtime":1610541117484,"results":"158","hashOfConfig":"104"},{"size":763,"mtime":1610688034695,"results":"159","hashOfConfig":"104"},{"size":710,"mtime":1608114590430,"results":"160","hashOfConfig":"104"},{"size":2302,"mtime":1612418424289,"results":"161","hashOfConfig":"104"},{"size":235,"mtime":1608209222322,"results":"162","hashOfConfig":"104"},{"size":2260,"mtime":1612418059262,"results":"163","hashOfConfig":"104"},{"size":1217,"mtime":1611137448692,"results":"164","hashOfConfig":"104"},{"size":1181,"mtime":1611139290509,"results":"165","hashOfConfig":"104"},{"size":1113,"mtime":1612782122159,"results":"166","hashOfConfig":"104"},{"size":1185,"mtime":1611139652980,"results":"167","hashOfConfig":"104"},{"size":575,"mtime":1611142697104,"results":"168","hashOfConfig":"104"},{"size":486,"mtime":1611137235194,"results":"169","hashOfConfig":"104"},{"size":1181,"mtime":1611229899168,"results":"170","hashOfConfig":"104"},{"size":1263,"mtime":1611250237120,"results":"171","hashOfConfig":"104"},{"size":763,"mtime":1611230988656,"results":"172","hashOfConfig":"104"},{"size":757,"mtime":1611238693130,"results":"173","hashOfConfig":"104"},{"size":1636,"mtime":1611237333190,"results":"174","hashOfConfig":"104"},{"size":1181,"mtime":1611237992772,"results":"175","hashOfConfig":"104"},{"size":4096,"mtime":1611238920791,"results":"176","hashOfConfig":"104"},{"size":1834,"mtime":1612781840688,"results":"177","hashOfConfig":"104"},{"size":2619,"mtime":1612781938370,"results":"178","hashOfConfig":"104"},{"size":1531,"mtime":1611581398870,"results":"179","hashOfConfig":"104"},{"size":1647,"mtime":1611581337000,"results":"180","hashOfConfig":"104"},{"size":922,"mtime":1611581973181,"results":"181","hashOfConfig":"104"},{"size":1572,"mtime":1611581828861,"results":"182","hashOfConfig":"104"},{"size":1205,"mtime":1611589413988,"results":"183","hashOfConfig":"104"},{"size":1327,"mtime":1611589717914,"results":"184","hashOfConfig":"104"},{"size":1324,"mtime":1612784085219,"results":"185","hashOfConfig":"104"},{"size":3113,"mtime":1612784182273,"results":"186","hashOfConfig":"104"},{"size":1292,"mtime":1611845585523,"results":"187","hashOfConfig":"104"},{"size":1956,"mtime":1611841365161,"results":"188","hashOfConfig":"104"},{"size":1572,"mtime":1611839856866,"results":"189","hashOfConfig":"104"},{"size":638,"mtime":1611840764091,"results":"190","hashOfConfig":"104"},{"size":617,"mtime":1611841949318,"results":"191","hashOfConfig":"104"},{"size":1567,"mtime":1611841594645,"results":"192","hashOfConfig":"104"},{"size":1956,"mtime":1611844144638,"results":"193","hashOfConfig":"104"},{"size":1008,"mtime":1611844231370,"results":"194","hashOfConfig":"104"},{"size":1098,"mtime":1611845315808,"results":"195","hashOfConfig":"104"},{"size":1956,"mtime":1611845948803,"results":"196","hashOfConfig":"104"},{"size":1147,"mtime":1611847222550,"results":"197","hashOfConfig":"104"},{"size":1641,"mtime":1611853657694,"results":"198","hashOfConfig":"104"},{"size":2751,"mtime":1611847260502,"results":"199","hashOfConfig":"104"},{"size":661,"mtime":1611847159399,"results":"200","hashOfConfig":"104"},{"size":761,"mtime":1611847013504,"results":"201","hashOfConfig":"104"},{"size":545,"mtime":1608114590420,"results":"202","hashOfConfig":"104"},{"size":1531,"mtime":1611844287117,"results":"203","hashOfConfig":"104"},{"size":1171,"mtime":1611238033634,"results":"204","hashOfConfig":"104"},{"size":536,"mtime":1611142174116,"results":"205","hashOfConfig":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"19u1ssp",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"214"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"226"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"226"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"248"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"226"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"368"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"226"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"214"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"248"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"214"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\Mindtech\\Portas\\portas\\src\\styles\\GlobalStyles.ts",[],["435","436"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Input\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Dashboard\\index.tsx",["437"],"import React, { useMemo, useState } from \"react\";\r\n\r\n/* Components */\r\nimport CardDashboard from \"../../components/Cards/CardDashboard\";\r\n// import PageTitle from \"../../components/PageTitle\";\r\n// import SmallHeader from \"../../components/Headers/SmallHeader\";\r\n\r\n/* Assets */\r\nimport img1 from \"../../assets/background/scrum_board.png\";\r\nimport img2 from \"../../assets/background/calling.png\";\r\nimport img3 from \"../../assets/background/help.png\";\r\nimport img4 from \"../../assets/background/Add_People.png\";\r\nimport img5 from \"../../assets/background/Receipt.png\";\r\n\r\n/* Styles */\r\nimport {\r\n  Container,\r\n  DashboardContent,\r\n  TopBar,\r\n  // PageTitle,\r\n  // Divider,\r\n} from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Roles } from \"../../config/roles.config\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport Modal from \"../../components/Modal\";\r\nimport AddTechnician from \"../../components/AddTechnician\";\r\n\r\nconst LINK_TECHNICIAN = gql`\r\n  mutation LinkUserToOrganization($CPF: String!) {\r\n    linkUserToOrganization(CPF: $CPF) {\r\n      sucess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [linkTech] = useMutation(LINK_TECHNICIAN);\r\n\r\n  const isClient = (JSON.parse(\r\n    localStorage.getItem(\"roles\") as string\r\n  ) as number[]).includes(Roles.CLIENTUSER);\r\n\r\n  const isTechnician = (JSON.parse(\r\n    localStorage.getItem(\"roles\") as string\r\n  ) as number[]).includes(Roles.TECHNICIAN);\r\n\r\n  const isAssistance = (JSON.parse(\r\n    localStorage.getItem(\"roles\") as string\r\n  ) as number[]).includes(Roles.ORGANIZATION);\r\n\r\n  console.log(\"isAssistance\", isAssistance);\r\n\r\n  function handleNavigate(route: string) {\r\n    history.push(route);\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"roles\");\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  async function handleLinkAdd(cpf: string) {\r\n    console.log(\"clicou\", cpf);\r\n    const response = await linkTech({ variables: { CPF: cpf } });\r\n    console.log(\"response\", response);\r\n  }\r\n\r\n  function handleOnClose(cpf?: string) {\r\n    if (cpf) {\r\n      handleLinkAdd(cpf);\r\n    }\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalMemoized = useMemo(\r\n    () => (\r\n      <Modal isOpen={isOpen} onClose={() => handleOnClose()}>\r\n        <AddTechnician onClose={handleOnClose} />\r\n      </Modal>\r\n    ),\r\n    [isOpen, handleOnClose]\r\n  );\r\n\r\n  const calledText = isClient\r\n    ? \"Visualize seus chamados\"\r\n    : isTechnician\r\n    ? \"Visualize os chamados em aberto\"\r\n    : \"Visualize todos os chamados\";\r\n\r\n  return (\r\n    <>\r\n      {/* <SmallHeader title=\"\" /> */}\r\n      <Container>\r\n        {/* <PageTitle title=\"Dashboard\" /> */}\r\n\r\n        <TopBar>\r\n          <h2>Dashboard</h2>\r\n          <span onClick={handleLogout}>Logout</span>\r\n        </TopBar>\r\n\r\n        <DashboardContent>\r\n          {isClient && (\r\n            <CardDashboard\r\n              title=\"Gerenciar suas portas\"\r\n              backgroundImg={img1}\r\n              onClick={() => handleNavigate(\"manage-doors\")}\r\n            />\r\n          )}\r\n\r\n          <CardDashboard\r\n            title={calledText}\r\n            backgroundImg={img2}\r\n            onClick={() => handleNavigate(\"manage-calls\")}\r\n          />\r\n\r\n          {isTechnician && (\r\n            <CardDashboard\r\n              title=\"Visualize seus chamados\"\r\n              backgroundImg={img5}\r\n              onClick={() => handleNavigate(\"attendance\")}\r\n            />\r\n          )}\r\n          {/* {isTechnician && (\r\n            <CardDashboard\r\n              title=\"Visualize seus chamados\"\r\n              backgroundImg={img5}\r\n              onClick={() => handleNavigate(\"manage-assign-calls\")}\r\n            />\r\n          )} */}\r\n\r\n          {isClient && (\r\n            <CardDashboard\r\n              title=\"Encontre seu suporte\"\r\n              backgroundImg={img3}\r\n              onClick={() => handleNavigate(\"assistance-list\")}\r\n            />\r\n          )}\r\n\r\n          {isAssistance && (\r\n            <CardDashboard\r\n              title=\"Adicione funcionários\"\r\n              backgroundImg={img4}\r\n              onClick={() => setIsOpen(true)}\r\n            />\r\n          )}\r\n        </DashboardContent>\r\n      </Container>\r\n\r\n      {modalMemoized}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n",["438","439"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\routes.tsx",["440","441","442"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\n\r\n/* Pages */\r\nimport Address from \"./pages/Signup/CommonUser/Address\";\r\nimport ChooseType from \"./pages/Signup/ChooseType\";\r\nimport Credentials from \"./pages/Signup/CommonUser/Credentials\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Finished from \"./pages/Finished\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport ManageDoors from \"./pages/ManageDoors\";\r\nimport AboutClient from \"./pages/Signup/CommonUser/About\";\r\n\r\n/* Organization */\r\nimport AboutOrganization from \"./pages/Signup/Organization/About\";\r\nimport AddressOrganization from \"./pages/Signup/Organization/Address\";\r\nimport AboutAdmin from \"./pages/Signup/Organization/AboutAdmin\";\r\nimport AddressAdmin from \"./pages/Signup/Organization/AddressAdmin\";\r\nimport CredentialsOrganization from \"./pages/Signup/Organization/Credentials\";\r\n\r\nimport AboutTechnician from \"./pages/Signup/Technician/About\";\r\nimport AddressTechnician from \"./pages/Signup/Technician/Address\";\r\nimport CredentialsTechnician from \"./pages/Signup/Technician/Credentials\";\r\n\r\nimport { getAllowedRoutes, isLoggedIn } from \"./utils\";\r\nimport privateRouteConfig from \"./config/privateRoute.config\";\r\n\r\nconst MapAllowedRoutes: React.FC<any> = ({\r\n  routes,\r\n  basePath,\r\n  isAddNotFound,\r\n}) => {\r\n  const match = useRouteMatch(basePath);\r\n  return (\r\n    <Switch>\r\n      {routes.map((route: any) => {\r\n        const {\r\n          path,\r\n          component: Component,\r\n          children,\r\n          title,\r\n          permission,\r\n          ...rest\r\n        } = route;\r\n\r\n        return (\r\n          <Route {...rest} key={path} path={`${match?.path}${path}`}>\r\n            <Component children={children} />\r\n          </Route>\r\n        );\r\n      })}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst PrivateRoutes: React.FC = () => {\r\n  const match = useRouteMatch(\"/app\");\r\n  let allowedRoutes: any[] = [];\r\n\r\n  if (isLoggedIn()) {\r\n    allowedRoutes = getAllowedRoutes(privateRouteConfig);\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MapAllowedRoutes routes={allowedRoutes} basePath=\"/app\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" exact component={LoginPage} />\r\n      <Route path=\"/sign-up-choose\" component={ChooseType} />\r\n\r\n      <Route path=\"/sign-up-common-user\" component={AboutClient} />\r\n      <Route path=\"/sign-up-address\" component={Address} />\r\n\r\n      <Route path=\"/sign-up-organization\" component={AboutOrganization} />\r\n      <Route\r\n        path=\"/sign-up-organization-address\"\r\n        component={AddressOrganization}\r\n      />\r\n      <Route path=\"/sign-up-organization-about-admin\" component={AboutAdmin} />\r\n      <Route\r\n        path=\"/sign-up-organization-address-admin\"\r\n        component={AddressAdmin}\r\n      />\r\n      <Route\r\n        path=\"/sign-up-organization-credentials\"\r\n        component={CredentialsOrganization}\r\n      />\r\n\r\n      <Route path=\"/sign-up-about-tech\" component={AboutTechnician} />\r\n      <Route path=\"/sign-up-address-tech\" component={AddressTechnician} />\r\n      <Route\r\n        path=\"/sign-up-credentials-tech\"\r\n        component={CredentialsTechnician}\r\n      />\r\n\r\n      <Route path=\"/sign-up-credentials\" component={Credentials} />\r\n      <Route path=\"/finished\" component={Finished} />\r\n\r\n      <Route path=\"/app\">\r\n        <PrivateRoutes />\r\n      </Route>\r\n\r\n      {/* <Route path=\"/dashboard\" component={Dashboard} />\r\n      <Route path=\"/doors\" component={ManageDoors} /> */}\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDashboard\\styles.ts",[],["443","444"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\SmallCard\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\LoginPage\\index.tsx",["445"],"import React, { useMemo, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n/* Components */\r\nimport Input from \"../../components/Form/Input\";\r\n\r\n/* Interfaces */\r\nimport { LoginForm } from \"../../interfaces/LoginPage/LoginForm\";\r\n\r\n/* Styles */\r\nimport {\r\n  Button,\r\n  Container,\r\n  FormContainer,\r\n  InputGroup,\r\n  Legend,\r\n  LegendContainer,\r\n  PageHeader,\r\n  TitleHeader,\r\n} from \"./styles\";\r\n\r\n/* Validator */\r\nimport { LoginValidator } from \"../../validators/Form/login.validator\";\r\nimport Modal from \"../../components/Modal\";\r\n\r\nconst LOGIN = gql`\r\n  mutation Login($email: String!, $password: String!) {\r\n    login(password: $password, email: $email) {\r\n      accessToken\r\n      message\r\n      sucess\r\n      userRole\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [login /* , { data } */] = useMutation(LOGIN);\r\n  const history = useHistory();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const initialValues: LoginForm = { email: \"\", password: \"\" };\r\n\r\n  async function handleSubmit(values: LoginForm) {\r\n    const response = await login({\r\n      variables: {\r\n        ...values,\r\n      },\r\n    });\r\n\r\n    if (response.data.login.sucess) {\r\n      // TODO: SALVAR TOKEN\r\n      const { accessToken, userRole } = response.data.login;\r\n      console.log(\"accessToken\", accessToken);\r\n      console.log(\"userRole\", userRole);\r\n\r\n      localStorage.setItem(\"token\", accessToken);\r\n      localStorage.setItem(\"roles\", JSON.stringify([userRole]));\r\n\r\n      history.push(\"app/dashboard\");\r\n    } else {\r\n      console.log(\"Erro: \", response.data.login);\r\n    }\r\n  }\r\n\r\n  function handleOnClose() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalMemoized = useMemo(\r\n    () => (\r\n      <Modal isOpen={isOpen} onClose={() => handleOnClose()}>\r\n        <div>Hue</div>\r\n      </Modal>\r\n    ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <PageHeader>\r\n          <TitleHeader>Projeto Portas</TitleHeader>\r\n        </PageHeader>\r\n\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={LoginValidator}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formik) => (\r\n            <FormContainer>\r\n              <div>\r\n                <LegendContainer>\r\n                  <Legend>Fazer Login</Legend>\r\n                  <Link to=\"sign-up-choose\">Cadastre-se</Link>\r\n                </LegendContainer>\r\n\r\n                <InputGroup>\r\n                  <Input label=\"E-mail\" id=\"email\" name=\"email\" required />\r\n\r\n                  <Input\r\n                    label=\"Senha\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n\r\n              <Button disabled={formik.isSubmitting} type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </FormContainer>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n\r\n      {modalMemoized}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n",["446","447"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\ChooseType\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\ChooseType\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Finished\\index.tsx",[],["448","449"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Input\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\LoginPage\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\About\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\About\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Credentials\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\About\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\about.validator.ts",[],["450","451"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Address\\index.tsx",["452","453"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Address\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Address\\index.tsx",["454"],"import React from \"react\";\r\nimport { Formik, FormikProps, withFormik } from \"formik\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport CepService from \"cep-promise\";\r\n\r\n/* Components */\r\nimport Input from \"../../../../components/Form/Input\";\r\n\r\n/* Interfaces */\r\nimport { IAddress } from \"../../../../interfaces/SignUp/Organization/address.interface\";\r\n\r\n/* Styles */\r\nimport {\r\n  Button,\r\n  Container,\r\n  Description,\r\n  FormContainer,\r\n  HeaderContent,\r\n  Legend,\r\n  PageHeader,\r\n  ReturnIconStyled,\r\n  Title,\r\n  TopBar,\r\n} from \"./styles\";\r\n\r\n/* Validators */\r\nimport { AddressValidator } from \"../../../../validators/Form/SignUp/Organization/address.validator\";\r\nimport { cepMask } from \"../../../../utils/Masks/cep.mask\";\r\n\r\nconst MyEnhancedForm = withFormik<any, IAddress>({\r\n  mapPropsToValues: () => ({\r\n    endereco: \"\",\r\n    numero: \"\",\r\n    complemento: \"\",\r\n    bairro: \"\",\r\n    cidade: \"\",\r\n    cep: \"\",\r\n  }),\r\n\r\n  validationSchema: AddressValidator,\r\n\r\n  handleSubmit: (values, { props }) => {\r\n    const { history } = props;\r\n    localStorage.setItem(\"address-org\", JSON.stringify(values));\r\n    history.push(\"sign-up-organization-about-admin\");\r\n  },\r\n\r\n  displayName: \"AddressOrgForm\",\r\n});\r\n\r\nconst Address = (props: FormikProps<IAddress>) => {\r\n  const { values, isValid, dirty, setValues } = props;\r\n  const history = useHistory();\r\n\r\n  function handleBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  async function getAddressByCep(cep: string) {\r\n    try {\r\n      const responseCEP = await CepService(cep);\r\n\r\n      setValues({\r\n        ...values,\r\n        bairro: responseCEP.neighborhood,\r\n        endereco: responseCEP.street,\r\n        cidade: responseCEP.city,\r\n      });\r\n    } catch (err) {\r\n      console.log(\"err\", err.errors);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>\r\n        <TopBar>\r\n          <ReturnIconStyled onClick={handleBack} />\r\n        </TopBar>\r\n\r\n        <HeaderContent>\r\n          <Title>Crie sua conta agora</Title>\r\n          <Description>\r\n            Agora nos informe sobre o endereço da empresa.\r\n          </Description>\r\n        </HeaderContent>\r\n      </PageHeader>\r\n\r\n      <FormContainer>\r\n        <fieldset>\r\n          <Legend>03. Endereço</Legend>\r\n\r\n          <Input\r\n            type=\"text\"\r\n            label=\"CEP\"\r\n            name=\"cep\"\r\n            required\r\n            onChange={(v) => {\r\n              setValues({\r\n                ...values,\r\n                cep: cepMask(v.target.value),\r\n              });\r\n            }}\r\n            onBlur={(e) => getAddressByCep(e.target.value)}\r\n          />\r\n          <Input type=\"text\" label=\"Endereço\" name=\"endereco\" required />\r\n          <Input type=\"text\" label=\"Bairro\" name=\"bairro\" required />\r\n          <Input type=\"text\" label=\"Cidade\" name=\"cidade\" required />\r\n          <Input type=\"text\" label=\"Número\" name=\"numero\" required />\r\n          <Input type=\"text\" label=\"Complemento\" name=\"complemento\" required />\r\n        </fieldset>\r\n\r\n        <Button disabled={!(isValid && dirty)} type=\"submit\">\r\n          Ok\r\n        </Button>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(MyEnhancedForm(Address));\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\address.validator.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AboutAdmin\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AboutAdmin\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\Organization\\aboutAdmin.validator.ts",[],["455","456"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AddressAdmin\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Credentials\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\AddressAdmin\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\About\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Address\\index.tsx",["457","458"],"import React from \"react\";\r\nimport { FormikProps, withFormik } from \"formik\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport CepService from \"cep-promise\";\r\n\r\n/* Components */\r\nimport Input from \"../../../../components/Form/Input\";\r\n\r\n/* Interfaces */\r\n\r\n/* Styles */\r\nimport {\r\n  Button,\r\n  Container,\r\n  Description,\r\n  FormContainer,\r\n  HeaderContent,\r\n  Legend,\r\n  PageHeader,\r\n  ReturnIconStyled,\r\n  Title,\r\n  TopBar,\r\n} from \"./styles\";\r\nimport { cepMask } from \"../../../../utils/Masks/cep.mask\";\r\n\r\n/* Validators */\r\n\r\nconst MyEnhancedForm = withFormik<any, any>({\r\n  mapPropsToValues: () => ({\r\n    bairro: \"\",\r\n    cep: \"\",\r\n    cidade: \"\",\r\n    complemento: \"\",\r\n    endereco: \"\",\r\n    numero: \"\",\r\n  }),\r\n\r\n  handleSubmit: (values, { props }) => {\r\n    const { history } = props;\r\n    localStorage.setItem(\"address-tech\", JSON.stringify(values));\r\n    history.push(\"sign-up-credentials-tech\");\r\n  },\r\n\r\n  displayName: \"AddressTechnicianForm\",\r\n});\r\n\r\nconst Address = (props: FormikProps<any>) => {\r\n  const { values, isValid, dirty, setValues } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  function handleBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  async function getAddressByCep(cep: string) {\r\n    try {\r\n      const responseCEP = await CepService(cep);\r\n\r\n      setValues({\r\n        ...values,\r\n        bairro: responseCEP.neighborhood,\r\n        endereco: responseCEP.street,\r\n        cidade: responseCEP.city,\r\n      });\r\n    } catch (err) {\r\n      console.log(\"err\", err.errors);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>\r\n        <TopBar>\r\n          <ReturnIconStyled onClick={handleBack} />\r\n        </TopBar>\r\n\r\n        <HeaderContent>\r\n          <Title>Crie sua conta agora</Title>\r\n          <Description>Agora nos informe sobre seu endereço.</Description>\r\n        </HeaderContent>\r\n      </PageHeader>\r\n\r\n      <FormContainer>\r\n        <fieldset>\r\n          <Legend>03. Seu endereço (Tech)</Legend>\r\n\r\n          <Input\r\n            type=\"text\"\r\n            label=\"CEP\"\r\n            name=\"cep\"\r\n            required\r\n            onChange={(v) => {\r\n              setValues({\r\n                ...values,\r\n                cep: cepMask(v.target.value),\r\n              });\r\n            }}\r\n            onBlur={(e) => getAddressByCep(e.target.value)}\r\n          />\r\n          <Input type=\"text\" label=\"Endereço\" name=\"endereco\" required />\r\n          <Input type=\"text\" label=\"Bairro\" name=\"bairro\" required />\r\n          <Input type=\"text\" label=\"Cidade\" name=\"cidade\" required />\r\n          <Input type=\"text\" label=\"Número\" name=\"numero\" required />\r\n          <Input type=\"text\" label=\"Complemento\" name=\"complemento\" required />\r\n        </fieldset>\r\n\r\n        <Button type=\"submit\">Ok</Button>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(MyEnhancedForm(Address));\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Credentials\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Finished\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Credentials\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\ClientUser\\commonUser.validator.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\SignUp\\ClientUser\\address.validator.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageDoors\\index.tsx",["459","460"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\index.ts",[],["461","462"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\config\\roles.config.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\config\\privateRoute.config.ts",["463"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\SmallCard\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDashboard\\index.tsx",["464","465"],"import React, { AllHTMLAttributes, HTMLAttributes } from \"react\";\r\n\r\n/* Styles */\r\nimport { Container, Title } from \"./styles\";\r\n\r\ninterface CardDashboardProps {\r\n  title: string;\r\n  backgroundImg: string;\r\n  onClick: () => any;\r\n}\r\n\r\nconst CardDashboard: React.FC<CardDashboardProps> = ({\r\n  title,\r\n  backgroundImg,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <Container backgroundImg={backgroundImg} onClick={onClick}>\r\n      <Title>\r\n        <span>{title}</span>\r\n      </Title>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardDashboard;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\index.ts",[],["466","467"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\AssistancesPage\\index.tsx",["468","469","470"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\AssistancesPage\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageCalls\\index.tsx",["471","472","473","474","475"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageCalls\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageDoors\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Dashboard\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\index.tsx",[],["476","477"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\About\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\slices\\signup.slice.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\redux\\reducers\\index.ts",[],["478","479"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Address\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\Address\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\CommonUser\\About\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardAssistance\\index.tsx",[],["480","481"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardAssistance\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\services\\api.ts",[],["482","483"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Organization\\Credentials\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\validators\\Form\\login.validator.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Signup\\Technician\\Credentials\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Modal\\index.tsx",["484"],"import React, { useEffect, useRef } from \"react\";\r\n\r\n/* Styles */\r\nimport { Backdrop, Content } from \"./styles\";\r\n\r\nimport Portal from \"../Portal\";\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Modal: React.FC<any> = ({ isOpen, onClose, children }) => {\r\n  const backdrop = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    const { current } = backdrop;\r\n\r\n    // Se clicar no fundo (backdrop), fecha o modal\r\n    const clickHandler = (e: any) => e.target === current && onClose();\r\n\r\n    // Fecha o modal com a tecla ESC\r\n    const keyHandler = (e: any) => e.which === 27 && onClose();\r\n\r\n    if (current) {\r\n      current.addEventListener(\"click\", clickHandler);\r\n      window.addEventListener(\"keyup\", keyHandler);\r\n    }\r\n\r\n    return () => {\r\n      if (current) {\r\n        current.removeEventListener(\"click\", clickHandler);\r\n      }\r\n\r\n      window.removeEventListener(\"keyup\", keyHandler);\r\n    };\r\n  }, [onClose]);\r\n\r\n  return (\r\n    isOpen && (\r\n      <Portal>\r\n        <Backdrop ref={backdrop} className={isOpen && \"active\"}>\r\n          <Content className=\"modal-content\">{children}</Content>\r\n        </Backdrop>\r\n      </Portal>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddTechnician\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Modal\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddTechnician\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\Masks\\cnpj.mask.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Portal\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddCall\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddCall\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardCalled\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardCalled\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageAssignCalleds\\styles.ts",[],["485","486"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\CloseCall\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ManageAssignCalleds\\index.tsx",["487","488","489","490","491"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Content,\r\n  Divider,\r\n  InfoPage,\r\n  Subtitle,\r\n  Title,\r\n  TopBar,\r\n} from \"./styles\";\r\n\r\nimport noData from \"../../assets/images/NoData.svg\";\r\nimport { Roles } from \"../../config/roles.config\";\r\nimport Modal from \"../../components/Modal\";\r\nimport AddCall from \"../../components/AddCall\";\r\nimport CardCalled from \"../../components/Cards/CardCalled\";\r\nimport CloseCall from \"../../components/CloseCall\";\r\n\r\nconst LIST_TECHNICIAN_OPEN_CALLEDS = gql`\r\n  query {\r\n    GetUnassignedOpenCalleds {\r\n      id\r\n      name\r\n      remote_actions\r\n      local_actions\r\n      signature\r\n      description\r\n      closed\r\n      door {\r\n        id\r\n        name\r\n      }\r\n      techinician {\r\n        id\r\n        name\r\n      }\r\n      client {\r\n        id\r\n        name\r\n      }\r\n      casuality {\r\n        id\r\n        name\r\n        isResovled\r\n      }\r\n      changedParts {\r\n        id\r\n        name\r\n      }\r\n      changedSettings {\r\n        id\r\n        name\r\n        before\r\n        after\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_CALLED = gql`\r\n  mutation UpdateSingleCalled($data: Called!) {\r\n    updateSingleCalled(data: $data) {\r\n      closed\r\n    }\r\n  }\r\n`;\r\n\r\nconst ManageAssignCalleds: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [clientId, setClientId] = useState(\"\");\r\n\r\n  const isTechnician = (JSON.parse(\r\n    localStorage.getItem(\"roles\") as string\r\n  ) as number[]).includes(Roles.TECHNICIAN);\r\n\r\n  const { loading, error, data } = useQuery(LIST_TECHNICIAN_OPEN_CALLEDS, {\r\n    pollInterval: 500,\r\n  });\r\n\r\n  const [closeCall] = useMutation(UPDATE_CALLED);\r\n\r\n  console.log(\"data\", data);\r\n\r\n  const info = data?.GetUnassignedOpenCalleds;\r\n  const history = useHistory();\r\n\r\n  function handleGoBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  async function handleOnClose(obj?: { signature: string }) {\r\n    try {\r\n      if (obj) {\r\n        const data = {\r\n          ...obj,\r\n          closed: true,\r\n          client: {\r\n            id: clientId,\r\n            name: \"\",\r\n          },\r\n          changedParts: [],\r\n          changedSettings: [],\r\n          remote_actions: \"\",\r\n          local_actions: \"\",\r\n        };\r\n        console.log(\"called\", data);\r\n        const response = await closeCall({ variables: { data } });\r\n        console.log(\"response\", response);\r\n        handleGoBack();\r\n      }\r\n    } catch (erro) {\r\n      console.log(\"Erro Manage Assign Calleds\", erro);\r\n    } finally {\r\n      setIsOpen(false);\r\n    }\r\n  }\r\n\r\n  async function handleClickCard(clientAssistanceId: string) {\r\n    setClientId(clientAssistanceId);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  const modalMemoized = useMemo(\r\n    () => (\r\n      <Modal isOpen={isOpen} onClose={() => handleOnClose()}>\r\n        <CloseCall onClose={handleOnClose} />\r\n      </Modal>\r\n    ),\r\n    [isOpen, handleOnClose]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TopBar onClick={handleGoBack}>Voltar</TopBar>\r\n\r\n        <InfoPage>\r\n          <Title>Visualize seus chamados</Title>\r\n        </InfoPage>\r\n\r\n        <Divider />\r\n\r\n        <Content>\r\n          {loading ? (\r\n            <span>Carregando...</span>\r\n          ) : info.length > 0 ? (\r\n            <>\r\n              {info\r\n                .filter((i: any) => i.techinician)\r\n                .map((d: any) => (\r\n                  <CardCalled\r\n                    key={d.id}\r\n                    name={d.name}\r\n                    description={d.description}\r\n                    closed={d.closed}\r\n                    onClick={() => handleClickCard(d.client.id)}\r\n                  />\r\n                ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img src={noData} alt=\"Nenhum chamado encontrado\" />\r\n              <Subtitle>Nenhum chamado encontrado</Subtitle>\r\n            </>\r\n          )}\r\n        </Content>\r\n      </Container>\r\n\r\n      {modalMemoized}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageAssignCalleds;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\CameraDoor\\index.tsx",["492","493","494","495"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\CameraDoor\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Identification\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Identification\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Status\\index.tsx",["496","497"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Status\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddDoor\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\AddDoor\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ConfirmDoor\\index.tsx",["498"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\ConfirmDoor\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Attendance\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Attendance\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardHistory\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardHistory\\index.tsx",["499"],"import React from \"react\";\r\n\r\n/* Styles */\r\nimport {\r\n  ButtonStyled,\r\n  Container,\r\n  Content,\r\n  Divider,\r\n  SubContent,\r\n  Subtitle,\r\n  Title,\r\n} from \"./styles\";\r\n\r\nconst CardHistory: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Histórico de Eventos</Title>\r\n\r\n      <Divider />\r\n\r\n      <Content>\r\n        <SubContent>\r\n          <Subtitle>20/01/2020 16:18 - Erro 45: Motor Travado</Subtitle>\r\n        </SubContent>\r\n\r\n        <SubContent>\r\n          <Subtitle>20/01/2020 16:18 - Erro 45: Motor Travado</Subtitle>\r\n        </SubContent>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardHistory;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardParams\\index.tsx",["500","501"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/* Styles */\r\nimport {\r\n  ButtonStyled,\r\n  Container,\r\n  Content,\r\n  Divider,\r\n  SubContent,\r\n  Subtitle,\r\n  Title,\r\n} from \"./styles\";\r\n\r\nconst CardParams: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  function handleSeeParams() {\r\n    history.push(\"params\");\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Parâmetros</Title>\r\n\r\n      <Divider />\r\n\r\n      <Content>\r\n        <ButtonStyled onClick={handleSeeParams}>Ver parâmetros</ButtonStyled>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardParams;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardParams\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Params\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Params\\index.tsx",["502","503","504","505","506"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Params\\index.tsx",["507","508"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Conclusion\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDescriptionRemote\\index.tsx",["509","510","511","512","513","514","515"],"import { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport Textarea from \"../../Form/Textarea\";\r\n\r\n/* Styles */\r\nimport {\r\n  ButtonStyled,\r\n  Container,\r\n  Content,\r\n  Divider,\r\n  Info,\r\n  InfoContainer,\r\n  SubContent,\r\n  Subtitle,\r\n  Title,\r\n  FormContainer,\r\n  LegendContainer,\r\n  Legend,\r\n} from \"./styles\";\r\n\r\nconst CardDescriptionRemote: React.FC = () => {\r\n  const initialValues = {\r\n    descriptionRemote: \"\",\r\n  };\r\n\r\n  async function handleSubmit(values: any) {\r\n    console.log(\"values\", values);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Descrição das ações remotas</Title>\r\n\r\n      <Divider />\r\n\r\n      <Content>\r\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n          {(formik) => (\r\n            <FormContainer>\r\n              <Textarea\r\n                label=\"E-mail\"\r\n                id=\"descriptionRemote\"\r\n                name=\"descriptionRemote\"\r\n                placeholder=\"Inserir\"\r\n                required\r\n              />\r\n            </FormContainer>\r\n          )}\r\n        </Formik>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardDescriptionRemote;\r\n","C:\\dev\\Mindtech\\Portas\\portas\\src\\pages\\Conclusion\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDescriptionRemote\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Textarea\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Form\\Textarea\\index.tsx",["516"],"C:\\dev\\Mindtech\\Portas\\portas\\src\\App.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\Cards\\CardDoor\\Params\\styles.ts",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\components\\CloseCall\\index.tsx",[],"C:\\dev\\Mindtech\\Portas\\portas\\src\\utils\\Masks\\cpf.mask.ts",[],{"ruleId":"517","replacedBy":"518"},{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","severity":1,"message":"522","line":75,"column":3,"nodeType":"523","endLine":80,"endColumn":4},{"ruleId":"517","replacedBy":"524"},{"ruleId":"519","replacedBy":"525"},{"ruleId":"526","severity":1,"message":"527","line":14,"column":8,"nodeType":"528","messageId":"529","endLine":14,"endColumn":17},{"ruleId":"526","severity":1,"message":"530","line":17,"column":8,"nodeType":"528","messageId":"529","endLine":17,"endColumn":19},{"ruleId":"526","severity":1,"message":"531","line":63,"column":9,"nodeType":"528","messageId":"529","endLine":63,"endColumn":14},{"ruleId":"517","replacedBy":"532"},{"ruleId":"519","replacedBy":"533"},{"ruleId":"521","severity":1,"message":"534","line":79,"column":5,"nodeType":"535","endLine":79,"endColumn":7,"suggestions":"536"},{"ruleId":"517","replacedBy":"537"},{"ruleId":"519","replacedBy":"538"},{"ruleId":"517","replacedBy":"539"},{"ruleId":"519","replacedBy":"540"},{"ruleId":"517","replacedBy":"541"},{"ruleId":"519","replacedBy":"542"},{"ruleId":"526","severity":1,"message":"543","line":54,"column":11,"nodeType":"528","messageId":"529","endLine":54,"endColumn":23},{"ruleId":"526","severity":1,"message":"544","line":56,"column":9,"nodeType":"528","messageId":"529","endLine":56,"endColumn":17},{"ruleId":"526","severity":1,"message":"545","line":2,"column":10,"nodeType":"528","messageId":"529","endLine":2,"endColumn":16},{"ruleId":"517","replacedBy":"546"},{"ruleId":"519","replacedBy":"547"},{"ruleId":"526","severity":1,"message":"548","line":48,"column":19,"nodeType":"528","messageId":"529","endLine":48,"endColumn":26},{"ruleId":"526","severity":1,"message":"549","line":48,"column":28,"nodeType":"528","messageId":"529","endLine":48,"endColumn":33},{"ruleId":"526","severity":1,"message":"550","line":16,"column":3,"nodeType":"528","messageId":"529","endLine":16,"endColumn":17},{"ruleId":"526","severity":1,"message":"551","line":45,"column":20,"nodeType":"528","messageId":"529","endLine":45,"endColumn":25},{"ruleId":"517","replacedBy":"552"},{"ruleId":"519","replacedBy":"553"},{"ruleId":"554","severity":1,"message":"555","line":15,"column":1,"nodeType":"556","endLine":76,"endColumn":3},{"ruleId":"526","severity":1,"message":"557","line":1,"column":17,"nodeType":"528","messageId":"529","endLine":1,"endColumn":34},{"ruleId":"526","severity":1,"message":"558","line":1,"column":36,"nodeType":"528","messageId":"529","endLine":1,"endColumn":50},{"ruleId":"517","replacedBy":"559"},{"ruleId":"519","replacedBy":"560"},{"ruleId":"526","severity":1,"message":"551","line":65,"column":20,"nodeType":"528","messageId":"529","endLine":65,"endColumn":25},{"ruleId":"526","severity":1,"message":"561","line":71,"column":14,"nodeType":"528","messageId":"529","endLine":71,"endColumn":25},{"ruleId":"526","severity":1,"message":"562","line":72,"column":12,"nodeType":"528","messageId":"529","endLine":72,"endColumn":21},{"ruleId":"526","severity":1,"message":"563","line":139,"column":9,"nodeType":"528","messageId":"529","endLine":139,"endColumn":23},{"ruleId":"526","severity":1,"message":"551","line":143,"column":20,"nodeType":"528","messageId":"529","endLine":143,"endColumn":25},{"ruleId":"526","severity":1,"message":"564","line":155,"column":14,"nodeType":"528","messageId":"529","endLine":155,"endColumn":37},{"ruleId":"526","severity":1,"message":"565","line":156,"column":12,"nodeType":"528","messageId":"529","endLine":156,"endColumn":33},{"ruleId":"521","severity":1,"message":"566","line":177,"column":3,"nodeType":"523","endLine":197,"endColumn":4},{"ruleId":"517","replacedBy":"567"},{"ruleId":"519","replacedBy":"568"},{"ruleId":"517","replacedBy":"569"},{"ruleId":"519","replacedBy":"570"},{"ruleId":"517","replacedBy":"571"},{"ruleId":"519","replacedBy":"572"},{"ruleId":"517","replacedBy":"573"},{"ruleId":"519","replacedBy":"574"},{"ruleId":"526","severity":1,"message":"575","line":8,"column":11,"nodeType":"528","messageId":"529","endLine":8,"endColumn":21},{"ruleId":"517","replacedBy":"576"},{"ruleId":"519","replacedBy":"577"},{"ruleId":"526","severity":1,"message":"578","line":6,"column":3,"nodeType":"528","messageId":"529","endLine":6,"endColumn":9},{"ruleId":"526","severity":1,"message":"579","line":19,"column":8,"nodeType":"528","messageId":"529","endLine":19,"endColumn":15},{"ruleId":"526","severity":1,"message":"580","line":76,"column":9,"nodeType":"528","messageId":"529","endLine":76,"endColumn":21},{"ruleId":"526","severity":1,"message":"551","line":80,"column":20,"nodeType":"528","messageId":"529","endLine":80,"endColumn":25},{"ruleId":"521","severity":1,"message":"581","line":95,"column":3,"nodeType":"523","endLine":120,"endColumn":4},{"ruleId":"526","severity":1,"message":"582","line":4,"column":8,"nodeType":"528","messageId":"529","endLine":4,"endColumn":22},{"ruleId":"526","severity":1,"message":"583","line":5,"column":8,"nodeType":"528","messageId":"529","endLine":5,"endColumn":14},{"ruleId":"526","severity":1,"message":"584","line":15,"column":3,"nodeType":"528","messageId":"529","endLine":15,"endColumn":11},{"ruleId":"521","severity":1,"message":"585","line":28,"column":3,"nodeType":"523","endLine":33,"endColumn":4},{"ruleId":"526","severity":1,"message":"586","line":5,"column":3,"nodeType":"528","messageId":"529","endLine":5,"endColumn":15},{"ruleId":"526","severity":1,"message":"587","line":10,"column":3,"nodeType":"528","messageId":"529","endLine":10,"endColumn":16},{"ruleId":"526","severity":1,"message":"584","line":12,"column":3,"nodeType":"528","messageId":"529","endLine":12,"endColumn":11},{"ruleId":"526","severity":1,"message":"586","line":5,"column":3,"nodeType":"528","messageId":"529","endLine":5,"endColumn":15},{"ruleId":"526","severity":1,"message":"588","line":10,"column":3,"nodeType":"528","messageId":"529","endLine":10,"endColumn":13},{"ruleId":"526","severity":1,"message":"584","line":11,"column":3,"nodeType":"528","messageId":"529","endLine":11,"endColumn":11},{"ruleId":"526","severity":1,"message":"582","line":3,"column":8,"nodeType":"528","messageId":"529","endLine":3,"endColumn":22},{"ruleId":"526","severity":1,"message":"583","line":4,"column":8,"nodeType":"528","messageId":"529","endLine":4,"endColumn":14},{"ruleId":"526","severity":1,"message":"589","line":5,"column":8,"nodeType":"528","messageId":"529","endLine":5,"endColumn":19},{"ruleId":"526","severity":1,"message":"590","line":6,"column":8,"nodeType":"528","messageId":"529","endLine":6,"endColumn":18},{"ruleId":"526","severity":1,"message":"586","line":10,"column":3,"nodeType":"528","messageId":"529","endLine":10,"endColumn":15},{"ruleId":"526","severity":1,"message":"586","line":5,"column":3,"nodeType":"528","messageId":"529","endLine":5,"endColumn":15},{"ruleId":"526","severity":1,"message":"587","line":10,"column":3,"nodeType":"528","messageId":"529","endLine":10,"endColumn":16},{"ruleId":"526","severity":1,"message":"586","line":7,"column":3,"nodeType":"528","messageId":"529","endLine":7,"endColumn":15},{"ruleId":"526","severity":1,"message":"591","line":11,"column":3,"nodeType":"528","messageId":"529","endLine":11,"endColumn":7},{"ruleId":"526","severity":1,"message":"587","line":12,"column":3,"nodeType":"528","messageId":"529","endLine":12,"endColumn":16},{"ruleId":"526","severity":1,"message":"588","line":13,"column":3,"nodeType":"528","messageId":"529","endLine":13,"endColumn":13},{"ruleId":"526","severity":1,"message":"584","line":14,"column":3,"nodeType":"528","messageId":"529","endLine":14,"endColumn":11},{"ruleId":"526","severity":1,"message":"592","line":17,"column":3,"nodeType":"528","messageId":"529","endLine":17,"endColumn":18},{"ruleId":"526","severity":1,"message":"593","line":18,"column":3,"nodeType":"528","messageId":"529","endLine":18,"endColumn":9},{"ruleId":"526","severity":1,"message":"594","line":16,"column":12,"nodeType":"528","messageId":"529","endLine":16,"endColumn":24},"no-native-reassign",["595"],"no-negated-in-lhs",["596"],"react-hooks/exhaustive-deps","The 'handleOnClose' function makes the dependencies of useMemo Hook (at line 88) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'handleOnClose' in its own useCallback() Hook.","FunctionDeclaration",["595"],["596"],"@typescript-eslint/no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'ManageDoors' is defined but never used.","'match' is assigned a value but never used.",["595"],["596"],"React Hook useMemo has a missing dependency: 'isOpen'. Either include it or remove the dependency array.","ArrayExpression",["597"],["595"],["596"],["595"],["596"],["595"],["596"],"'isSubmitting' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Formik' is defined but never used.",["595"],["596"],"'isValid' is assigned a value but never used.","'dirty' is assigned a value but never used.","'DoorsContainer' is defined but never used.","'error' is assigned a value but never used.",["595"],["596"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'AllHTMLAttributes' is defined but never used.","'HTMLAttributes' is defined but never used.",["595"],["596"],"'loadingLink' is assigned a value but never used.","'errorLink' is assigned a value but never used.","'isOrganization' is assigned a value but never used.","'loadingClientAssistance' is assigned a value but never used.","'errorClientAssistance' is assigned a value but never used.","The 'handleOnClose' function makes the dependencies of useMemo Hook (at line 217) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'handleOnClose' in its own useCallback() Hook.",["595"],["596"],["595"],["596"],["595"],["596"],["595"],["596"],"'ModalProps' is defined but never used.",["595"],["596"],"'Button' is defined but never used.","'AddCall' is defined but never used.","'isTechnician' is assigned a value but never used.","The 'handleOnClose' function makes the dependencies of useMemo Hook (at line 133) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'handleOnClose' in its own useCallback() Hook.","'Identification' is defined but never used.","'Status' is defined but never used.","'Subtitle' is defined but never used.","The 'handleOnClose' function makes the dependencies of useMemo Hook (at line 41) change on every render. Move it inside the useMemo callback. Alternatively, wrap the definition of 'handleOnClose' in its own useCallback() Hook.","'ButtonStyled' is defined but never used.","'InfoContainer' is defined but never used.","'SubContent' is defined but never used.","'CardHistory' is defined but never used.","'CardParams' is defined but never used.","'Info' is defined but never used.","'LegendContainer' is defined but never used.","'Legend' is defined but never used.","'onLabelClick' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"598","fix":"599"},"Update the dependencies array to be: [isOpen]",{"range":"600","text":"601"},[1935,1937],"[isOpen]"]
